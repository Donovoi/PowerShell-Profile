<StyleCopViolations>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\UIAutomation\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root" LineNumber="21" StartLine="21" StartColumn="1" EndLine="21" EndColumn="32" Source="C:\Projects\PS\STUPS\UIAutomation\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.Commands.NewPSClassCommand.NewPSClassCommand" LineNumber="18" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSClassCommand.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSClassCommand.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.System" LineNumber="9" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSClassCommand.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.PSTestLib.Commands.NewPSEnumCommand" LineNumber="16" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSEnumCommand.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: Enum</Violation>
  <Violation Section="Root.PSTestLib.Commands.NewPSEnumCommand.NewPSEnumCommand" LineNumber="18" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSEnumCommand.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSEnumCommand.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.System" LineNumber="9" Source="C:\Projects\PS\STUPS\PSTestLibrary\Commands\C#\NewPSEnumCommand.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: Cmdlet</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.PSCmdletBase" LineNumber="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.OnSuccessAction" LineNumber="34" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.OnErrorAction" LineNumber="36" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.OnErrorScreenShot" LineNumber="38" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="40" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.OnSleepAction" LineNumber="43" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.TestResultName" LineNumber="47" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.TestResultId" LineNumber="49" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.TestPassed" LineNumber="51" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.KnownIssue" LineNumber="53" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.TestLog" LineNumber="55" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventSource" LineNumber="67" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventArgs" LineNumber="68" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod010CheckOutputObject%object" LineNumber="75" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod020Highlight%PSCmdletBase%object" LineNumber="84" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod030RunScriptBlocks%PSCmdletBase%object" LineNumber="90" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod040SetTestResult%PSCmdletBase%object" LineNumber="96" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod045OnSuccessScreenshot%PSCmdletBase%object" LineNumber="101" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod050OnSuccessDelay%PSCmdletBase%object" LineNumber="107" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod060OutputResult%PSCmdletBase%object" LineNumber="113" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod070Report%PSCmdletBase%object" LineNumber="124" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObjectMethod080ReportFailure" LineNumber="130" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object" LineNumber="135" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object[]" LineNumber="161" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%System.Collections.Generic.List`object" LineNumber="169" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%ArrayList" LineNumber="177" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%ICollection" LineNumber="201" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%Hashtable" LineNumber="210" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="216" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod010RunScriptBlocks%PSCmdletBase" LineNumber="293" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod020SetTestResult%PSCmdletBase%ErrorRecord" LineNumber="298" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod030ChangeTimeoutSettings%PSCmdletBase%bool" LineNumber="303" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod040AddErrorToErrorList%PSCmdletBase%ErrorRecord" LineNumber="308" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod045OnErrorScreenshot%PSCmdletBase" LineNumber="313" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod050OnErrorDelay%PSCmdletBase" LineNumber="318" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod060OutputError%PSCmdletBase%ErrorRecord%bool" LineNumber="323" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteErrorMethod070Report%PSCmdletBase" LineNumber="328" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="334" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%string%string%ErrorCategory%bool" LineNumber="363" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="377" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="412" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="469" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="504" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletSignature%PSCmdletBase" LineNumber="535" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.ConvertHashtableToDictionary%Hashtable" LineNumber="672" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="735" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="760" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.SaveEventInput%AutomationElement%AutomationEventArgs%string%bool" LineNumber="812" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="822" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="901" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.runScriptBlock%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="940" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The delegate must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventArgs" LineNumber="68" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object[]" LineNumber="163" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%System.Collections.Generic.List`object" LineNumber="171" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%ArrayList" LineNumber="179" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%ICollection" LineNumber="203" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="218" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="236" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="236" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="380" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="383" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="396" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="385" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="393" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="396" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="397" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="400" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="405" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="417" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="420" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="StatementMustNotBeOnSingleLine" RuleId="SA1501">A statement containing curly brackets must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="422" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="434" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="424" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="431" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="434" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="475" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="477" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="477" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="478" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="483" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="507" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="510" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="513" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="513" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="516" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="516" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="519" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="519" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="522" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="522" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="526" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.ConvertHashtableToDictionary%Hashtable" LineNumber="680" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="744" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="745" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="750" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="751" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="765" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="803" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="767" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="769" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="771" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="773" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="788" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="774" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="783" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="783" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="788" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="803" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="845" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="884" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="848" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="850" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="850" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="862" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="872" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="872" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="884" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="906" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="920" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the closing curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="920" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="76" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="85" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="91" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="97" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="99" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="102" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="108" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="114" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="125" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="131" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="133" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object" LineNumber="136" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object" LineNumber="139" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="218" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="236" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="234" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="236" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="238" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="291" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="296" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="299" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="301" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="304" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="306" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="309" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="311" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="314" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="316" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="321" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="324" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="326" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="378" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="383" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="385" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="392" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="413" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="422" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="424" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="467" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="483" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="485" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="500" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="529" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="554" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="670" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.ConvertHashtableToDictionary%Hashtable" LineNumber="680" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="695" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="696" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="733" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="738" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="748" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="754" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="761" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="780" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="782" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="809" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="811" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="809" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.SaveEventInput%AutomationElement%AutomationEventArgs%string%bool" LineNumber="817" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.SaveEventInput%AutomationElement%AutomationEventArgs%string%bool" LineNumber="819" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="825" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="833" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="861" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="868" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="870" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="872" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="870" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="882" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="899" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="909" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="932" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.runScriptBlock%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="940" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The delegate must have an access modifier.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="216" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: writeSingleObject.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="405" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'eNotUsed' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="735" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: runTwoScriptBlockCollections.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="760" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: runScriptBlocks.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="788" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'eInner' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="803" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'eOuter' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="822" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: runSBEvent.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="884" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'eOuter' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="901" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">method names begin with an upper-case letter: runSBAction.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="905" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'psObjects' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="920" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="FieldNamesMustNotUseHungarianNotation" RuleId="SA1305">The variable name 'eOuter' begins with a prefix that looks like Hungarian notation. Remove the prefix or add it to the list of allowed prefixes.</Violation>
  <Violation Section="Root.PSTestLib.runScriptBlock%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="940" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="ElementMustBeginWithUpperCaseLetter" RuleId="SA1300">delegate names begin with an upper-case letter: runScriptBlock.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="940" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All classes must be placed after all delegates.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="43" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal properties must be placed after all public properties.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="47" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal properties must be placed after all public properties.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="49" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal properties must be placed after all public properties.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="51" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal properties must be placed after all public properties.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="53" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal properties must be placed after all public properties.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.EventAction" LineNumber="55" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All internal properties must be placed after all public properties.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="135" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="161" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="169" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="177" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="201" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="210" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="334" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="363" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="377" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="412" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="504" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteLog%string" LineNumber="760" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All protected methods must be placed after all public methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="293" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="298" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="303" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="308" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="313" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="318" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="323" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="328" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="469" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="535" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="672" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="735" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="812" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustBeOrderedByAccess" RuleId="SA1202">All private methods must be placed after all protected methods.</Violation>
  <Violation Section="Root.PSTestLib.System.Management.Automation" LineNumber="13" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.PSTestLib.System.Management.Automation.Runspaces" LineNumber="14" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.PSTestLib.System.Collections.ObjectModel" LineNumber="15" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.PSTestLib.System.Windows.Automation" LineNumber="17" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" RuleId="SA1210">Using directives must be sorted alphabetically by the namespaces.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="506" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.ConvertHashtableToDictionary%Hashtable" LineNumber="688" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.ConvertHashtableToDictionary%Hashtable" LineNumber="688" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustNotSpanMultipleLines" RuleId="SA1118">The parameter spans multiple lines. If the parameter is short, place the entire parameter on a single line. Otherwise, save the contents of the parameter in a temporary variable and pass the temporary variable as a parameter. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.ConvertHashtableToDictionary%Hashtable" LineNumber="688" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="760" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="804" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="822" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="852" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="874" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="886" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="901" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="922" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation Section="Root.PSTestLib.runScriptBlock%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="940" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the delegate parameters are on separate lines, the first parameter must begin on the line beneath the name of the delegate.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="236" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="396" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="400" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="420" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="434" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="477" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="513" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="516" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="519" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="522" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="783" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="CodeMustNotContainMultipleStatementsOnOneLine" RuleId="SA1107">A line may only contain a single statement.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object" LineNumber="138" StartLine="138" StartColumn="13" EndLine="138" EndColumn="29" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to writeSingleObject must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object[]" LineNumber="164" StartLine="164" StartColumn="17" EndLine="164" EndColumn="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObject must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%System.Collections.Generic.List`object" LineNumber="172" StartLine="172" StartColumn="17" EndLine="172" EndColumn="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObject must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%ArrayList" LineNumber="180" StartLine="180" StartColumn="17" EndLine="180" EndColumn="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObject must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%ICollection" LineNumber="205" StartLine="205" StartColumn="17" EndLine="205" EndColumn="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObject must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="220" StartLine="220" StartColumn="17" EndLine="220" EndColumn="45" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod020Highlight must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="222" StartLine="222" StartColumn="17" EndLine="222" EndColumn="51" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod030RunScriptBlocks must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="224" StartLine="224" StartColumn="17" EndLine="224" EndColumn="49" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod040SetTestResult must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="226" StartLine="226" StartColumn="17" EndLine="226" EndColumn="55" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod045OnSuccessScreenshot must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="228" StartLine="228" StartColumn="17" EndLine="228" EndColumn="50" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod050OnSuccessDelay must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="230" StartLine="230" StartColumn="17" EndLine="230" EndColumn="48" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod060OutputResult must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="232" StartLine="232" StartColumn="17" EndLine="232" EndColumn="42" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod070Report must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="218" StartLine="218" StartColumn="17" EndLine="218" EndColumn="53" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteObjectMethod010CheckOutputObject must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="337" StartLine="337" StartColumn="13" EndLine="337" EndColumn="46" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod010RunScriptBlocks must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="342" StartLine="342" StartColumn="13" EndLine="342" EndColumn="44" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod020SetTestResult must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="345" StartLine="345" StartColumn="13" EndLine="345" EndColumn="52" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod030ChangeTimeoutSettings must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="348" StartLine="348" StartColumn="13" EndLine="348" EndColumn="50" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod040AddErrorToErrorList must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="351" StartLine="351" StartColumn="13" EndLine="351" EndColumn="48" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod045OnErrorScreenshot must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="354" StartLine="354" StartColumn="13" EndLine="354" EndColumn="43" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod050OnErrorDelay must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="357" StartLine="357" StartColumn="13" EndLine="357" EndColumn="42" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod060OutputError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="360" StartLine="360" StartColumn="13" EndLine="360" EndColumn="37" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteErrorMethod070Report must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%string%string%ErrorCategory%bool" LineNumber="373" StartLine="373" StartColumn="13" EndLine="373" EndColumn="22" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="388" StartLine="388" StartColumn="25" EndLine="388" EndColumn="39" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to CmdletSignature must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="427" StartLine="427" StartColumn="25" EndLine="427" EndColumn="39" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to CmdletSignature must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="755" StartLine="755" StartColumn="13" EndLine="755" EndColumn="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to runScriptBlocks must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="779" StartLine="779" StartColumn="80" EndLine="779" EndColumn="89" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to runSBEvent must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="785" StartLine="785" StartColumn="80" EndLine="785" EndColumn="90" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to runSBAction must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="798" StartLine="798" StartColumn="33" EndLine="798" EndColumn="42" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="804" StartLine="804" StartColumn="17" EndLine="804" EndColumn="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="828" StartLine="828" StartColumn="13" EndLine="828" EndColumn="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to SaveEventInput must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="860" StartLine="860" StartColumn="21" EndLine="860" EndColumn="30" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="880" StartLine="880" StartColumn="21" EndLine="880" EndColumn="30" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="933" StartLine="933" StartColumn="17" EndLine="933" EndColumn="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to WriteError must begin with the 'this.', 'base.', 'object.' or 'PSCmdletBase.' or 'PSCmdlet.' prefix to indicate the intended method call. </Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.CmdletName%PSCmdletBase" LineNumber="531" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseStringEmptyForEmptyStrings" RuleId="SA1122">Use string.Empty rather than "".</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="24" StartLine="24" StartColumn="51" EndLine="24" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.PSCmdletBase" LineNumber="28" StartLine="28" StartColumn="13" EndLine="28" EndColumn="48" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="57" StartLine="57" StartColumn="1" EndLine="57" EndColumn="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="73" StartLine="73" StartColumn="9" EndLine="73" EndColumn="91" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="74" StartLine="74" StartColumn="9" EndLine="74" EndColumn="88" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="76" StartLine="76" StartColumn="1" EndLine="76" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="82" StartLine="82" StartColumn="9" EndLine="82" EndColumn="98" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="83" StartLine="83" StartColumn="9" EndLine="83" EndColumn="95" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="85" StartLine="85" StartColumn="1" EndLine="85" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="89" StartLine="89" StartColumn="9" EndLine="89" EndColumn="110" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="91" StartLine="91" StartColumn="1" EndLine="91" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="95" StartLine="95" StartColumn="9" EndLine="95" EndColumn="108" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="97" StartLine="97" StartColumn="1" EndLine="97" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="102" StartLine="102" StartColumn="1" EndLine="102" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="106" StartLine="106" StartColumn="9" EndLine="106" EndColumn="109" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="108" StartLine="108" StartColumn="1" EndLine="108" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="112" StartLine="112" StartColumn="9" EndLine="112" EndColumn="107" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="114" StartLine="114" StartColumn="1" EndLine="114" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="123" StartLine="123" StartColumn="9" EndLine="123" EndColumn="101" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="125" StartLine="125" StartColumn="1" EndLine="125" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="129" StartLine="129" StartColumn="9" EndLine="129" EndColumn="68" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="131" StartLine="131" StartColumn="1" EndLine="131" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object" LineNumber="136" StartLine="136" StartColumn="9" EndLine="136" EndColumn="91" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%object" LineNumber="139" StartLine="139" StartColumn="1" EndLine="139" EndColumn="72" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="160" StartLine="160" StartColumn="9" EndLine="160" EndColumn="87" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="168" StartLine="168" StartColumn="9" EndLine="168" EndColumn="118" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="176" StartLine="176" StartColumn="9" EndLine="176" EndColumn="88" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="184" StartLine="184" StartColumn="1" EndLine="184" EndColumn="94" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="192" StartLine="192" StartColumn="1" EndLine="192" EndColumn="127" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="200" StartLine="200" StartColumn="9" EndLine="200" EndColumn="90" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="209" StartLine="209" StartColumn="9" EndLine="209" EndColumn="88" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteObject%PSCmdletBase%Hashtable" LineNumber="212" StartLine="212" StartColumn="13" EndLine="212" EndColumn="63" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.writeSingleObject%PSCmdletBase%object" LineNumber="234" StartLine="234" StartColumn="17" EndLine="234" EndColumn="54" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="241" StartLine="241" StartColumn="1" EndLine="241" EndColumn="90" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="248" StartLine="248" StartColumn="1" EndLine="248" EndColumn="97" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="253" StartLine="253" StartColumn="1" EndLine="253" EndColumn="113" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="293" StartLine="293" StartColumn="90" EndLine="293" EndColumn="113" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="299" StartLine="299" StartColumn="1" EndLine="299" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="304" StartLine="304" StartColumn="1" EndLine="304" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="309" StartLine="309" StartColumn="1" EndLine="309" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="314" StartLine="314" StartColumn="1" EndLine="314" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="318" StartLine="318" StartColumn="87" EndLine="318" EndColumn="110" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="324" StartLine="324" StartColumn="1" EndLine="324" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="328" StartLine="328" StartColumn="81" EndLine="328" EndColumn="104" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="333" StartLine="333" StartColumn="9" EndLine="333" EndColumn="108" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="337" StartLine="337" StartColumn="57" EndLine="337" EndColumn="74" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="342" StartLine="342" StartColumn="68" EndLine="342" EndColumn="85" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="354" StartLine="354" StartColumn="54" EndLine="354" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteError%PSCmdletBase%ErrorRecord%bool" LineNumber="360" StartLine="360" StartColumn="48" EndLine="360" EndColumn="65" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="378" StartLine="378" StartColumn="9" EndLine="378" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="400" StartLine="400" StartColumn="23" EndLine="400" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="OpeningCurlyBracketsMustBeSpacedCorrectly" RuleId="SA1012">Invalid spacing around the opening curly bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%string" LineNumber="400" StartLine="400" StartColumn="24" EndLine="400" EndColumn="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingCurlyBracketsMustBeSpacedCorrectly" RuleId="SA1013">Invalid spacing around the closing curly bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="410" StartLine="410" StartColumn="9" EndLine="410" EndColumn="83" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="411" StartLine="411" StartColumn="9" EndLine="411" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="420" StartLine="420" StartColumn="19" EndLine="420" EndColumn="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="OpeningCurlyBracketsMustBeSpacedCorrectly" RuleId="SA1012">Invalid spacing around the opening curly bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.WriteVerbose%PSCmdletBase%object" LineNumber="420" StartLine="420" StartColumn="20" EndLine="420" EndColumn="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingCurlyBracketsMustBeSpacedCorrectly" RuleId="SA1013">Invalid spacing around the closing curly bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="439" StartLine="439" StartColumn="1" EndLine="439" EndColumn="84" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="446" StartLine="446" StartColumn="1" EndLine="446" EndColumn="51" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="TabsMustNotBeUsed" RuleId="SA1027">Tabs are not allowed. Use spaces instead.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="447" StartLine="447" StartColumn="1" EndLine="447" EndColumn="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="TabsMustNotBeUsed" RuleId="SA1027">Tabs are not allowed. Use spaces instead.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="449" StartLine="449" StartColumn="1" EndLine="449" EndColumn="15" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="TabsMustNotBeUsed" RuleId="SA1027">Tabs are not allowed. Use spaces instead.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="450" StartLine="450" StartColumn="1" EndLine="450" EndColumn="48" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="451" StartLine="451" StartColumn="1" EndLine="451" EndColumn="15" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="TabsMustNotBeUsed" RuleId="SA1027">Tabs are not allowed. Use spaces instead.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="452" StartLine="452" StartColumn="1" EndLine="452" EndColumn="15" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="TabsMustNotBeUsed" RuleId="SA1027">Tabs are not allowed. Use spaces instead.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="458" StartLine="458" StartColumn="1" EndLine="458" EndColumn="83" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.GetGeneratedTestResultNameByPosition%string%int?" LineNumber="475" StartLine="475" StartColumn="17" EndLine="475" EndColumn="17" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SymbolsMustBeSpacedCorrectly" RuleId="SA1003">The spacing around the symbol '!' is invalid.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="491" StartLine="491" StartColumn="1" EndLine="491" EndColumn="61" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="503" StartLine="503" StartColumn="9" EndLine="503" EndColumn="58" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="543" StartLine="543" StartColumn="1" EndLine="543" EndColumn="48" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="555" StartLine="555" StartColumn="1" EndLine="555" EndColumn="97" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="697" StartLine="697" StartColumn="1" EndLine="697" EndColumn="94" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="734" StartLine="734" StartColumn="9" EndLine="734" EndColumn="52" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runTwoScriptBlockCollections%ScriptBlock[]%ScriptBlock[]%PSCmdletBase" LineNumber="738" StartLine="738" StartColumn="13" EndLine="738" EndColumn="46" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="759" StartLine="759" StartColumn="9" EndLine="759" EndColumn="93" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="760" StartLine="760" StartColumn="81" EndLine="760" EndColumn="81" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingGenericBracketsMustBeSpacedCorrectly" RuleId="SA1015">Invalid spacing around the closing generic bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="760" StartLine="760" StartColumn="82" EndLine="760" EndColumn="83" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CodeMustNotContainMultipleWhitespaceInARow" RuleId="SA1025">The code contains multiple spaces in a row. Only one space is needed.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runScriptBlocks%System.Collections.Generic.List`ScriptBlock%PSCmdletBase%bool" LineNumber="761" StartLine="761" StartColumn="38" EndLine="761" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase" LineNumber="809" StartLine="809" StartColumn="9" EndLine="809" EndColumn="37" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="833" StartLine="833" StartColumn="1" EndLine="833" EndColumn="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="863" StartLine="863" StartColumn="60" EndLine="863" EndColumn="60" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingGenericBracketsMustBeSpacedCorrectly" RuleId="SA1015">Invalid spacing around the closing generic bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="863" StartLine="863" StartColumn="61" EndLine="863" EndColumn="62" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="CodeMustNotContainMultipleWhitespaceInARow" RuleId="SA1025">The code contains multiple spaces in a row. Only one space is needed.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="864" StartLine="864" StartColumn="68" EndLine="864" EndColumn="68" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="ClosingGenericBracketsMustBeSpacedCorrectly" RuleId="SA1015">Invalid spacing around the closing generic bracket.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="864" StartLine="864" StartColumn="69" EndLine="864" EndColumn="69" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="OpeningParenthesisMustBeSpacedCorrectly" RuleId="SA1008">Invalid spacing around the opening parenthesis.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBEvent%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="887" StartLine="887" StartColumn="67" EndLine="887" EndColumn="94" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSCmdletBase.runSBAction%ScriptBlock%AutomationElement%AutomationEventArgs" LineNumber="932" StartLine="932" StartColumn="38" EndLine="932" EndColumn="142" Source="C:\Projects\PS\STUPS\PSTestLibrary\Helpers\Inheritance\PSCmdletBase.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes" LineNumber="12" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The enum must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Action" LineNumber="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: falg</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Container" LineNumber="22" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationHeadersMustNotContainBlankLines" RuleId="SA1644">The documentation header must not contain blank lines. Use the 'para' tag to insert line breaks within documentation text.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Container" LineNumber="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustHaveSummaryText" RuleId="SA1606">The summary section in the documentation header must not be empty.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Change" LineNumber="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="DocumentationHeadersMustNotContainBlankLines" RuleId="SA1644">The documentation header must not contain blank lines. Use the 'para' tag to insert line breaks within documentation text.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Change" LineNumber="28" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustHaveSummaryText" RuleId="SA1606">The summary section in the documentation header must not be empty.</Violation>
  <Violation Section="Root.PSTestLib.ActionTypes" LineNumber="35" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The enum must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ActionTypes.Click" LineNumber="36" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="EnumerationItemsMustBeDocumented" RuleId="SA1602">The enumeration sub-item must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ActionTypes.DoubleClick" LineNumber="37" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="EnumerationItemsMustBeDocumented" RuleId="SA1602">The enumeration sub-item must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ActionTypes.TextInput" LineNumber="38" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="EnumerationItemsMustBeDocumented" RuleId="SA1602">The enumeration sub-item must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ActionTypes.KeyboardDown" LineNumber="39" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="EnumerationItemsMustBeDocumented" RuleId="SA1602">The enumeration sub-item must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes" LineNumber="12" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Action" LineNumber="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Container" LineNumber="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Change" LineNumber="28" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Data" LineNumber="32" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ActionTypes" LineNumber="35" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" RuleId="SA1500">If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Action" LineNumber="17" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Container" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Change" LineNumber="25" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.RecordingTypes.Data" LineNumber="29" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Enum.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase" LineNumber="18" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: Cmdlet</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod010CheckOutputObject%object" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod020Highlight%PSCmdletBase%object" LineNumber="22" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod030RunScriptBlocks%PSCmdletBase%object" LineNumber="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod040SetTestResult%PSCmdletBase%object" LineNumber="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod045OnSuccessScreenshot%PSCmdletBase%object" LineNumber="25" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod050OnSuccessDelay%PSCmdletBase%object" LineNumber="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod060OutputResult%PSCmdletBase%object" LineNumber="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod070Report%PSCmdletBase%object" LineNumber="28" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod080ReportFailure" LineNumber="29" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod010RunScriptBlocks%PSCmdletBase" LineNumber="31" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod020SetTestResult%PSCmdletBase%ErrorRecord" LineNumber="32" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod030ChangeTimeoutSettings%PSCmdletBase%bool" LineNumber="33" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod040AddErrorToErrorList%PSCmdletBase%ErrorRecord" LineNumber="34" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod045OnErrorScreenshot%PSCmdletBase%object" LineNumber="35" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod050OnErrorDelay%PSCmdletBase" LineNumber="36" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod060OutputResult%PSCmdletBase%ErrorRecord%bool" LineNumber="37" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod070Report%PSCmdletBase" LineNumber="38" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteLog%string" LineNumber="40" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod020Highlight%PSCmdletBase%object" LineNumber="22" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod030RunScriptBlocks%PSCmdletBase%object" LineNumber="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod040SetTestResult%PSCmdletBase%object" LineNumber="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod045OnSuccessScreenshot%PSCmdletBase%object" LineNumber="25" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod050OnSuccessDelay%PSCmdletBase%object" LineNumber="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod060OutputResult%PSCmdletBase%object" LineNumber="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod070Report%PSCmdletBase%object" LineNumber="28" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteObjectMethod080ReportFailure" LineNumber="29" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod020SetTestResult%PSCmdletBase%ErrorRecord" LineNumber="32" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod030ChangeTimeoutSettings%PSCmdletBase%bool" LineNumber="33" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod040AddErrorToErrorList%PSCmdletBase%ErrorRecord" LineNumber="34" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod045OnErrorScreenshot%PSCmdletBase%object" LineNumber="35" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod050OnErrorDelay%PSCmdletBase" LineNumber="36" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod060OutputResult%PSCmdletBase%ErrorRecord%bool" LineNumber="37" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase.WriteErrorMethod070Report%PSCmdletBase" LineNumber="38" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICommonCmdletBase" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICommonCmdletBase.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData.Error" LineNumber="24" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData.LastCmdlet" LineNumber="26" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData.LastResult" LineNumber="28" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData.Events" LineNumber="31" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData.ResetData" LineNumber="45" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="25" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="27" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="29" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="43" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="46" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="21" StartLine="21" StartColumn="5" EndLine="21" EndColumn="7" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="23" StartLine="23" StartColumn="9" EndLine="23" EndColumn="78" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="25" StartLine="25" StartColumn="9" EndLine="25" EndColumn="50" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="27" StartLine="27" StartColumn="9" EndLine="27" EndColumn="50" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="29" StartLine="29" StartColumn="9" EndLine="29" EndColumn="87" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="30" StartLine="30" StartColumn="9" EndLine="30" EndColumn="128" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="33" StartLine="33" StartColumn="9" EndLine="33" EndColumn="74" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="35" StartLine="35" StartColumn="1" EndLine="35" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="43" StartLine="43" StartColumn="1" EndLine="43" EndColumn="57" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="46" StartLine="46" StartColumn="1" EndLine="46" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="59" StartLine="59" StartColumn="1" EndLine="59" EndColumn="71" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ICurrentData" LineNumber="68" StartLine="68" StartColumn="1" EndLine="68" EndColumn="57" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\ICurrentData.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedActionItem.UserData" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedActionItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedActionItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedCodeSequence.Items" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedCodeSequence.ReadyToProduceCode" LineNumber="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedCodeSequence.CodeProduced" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedCodeSequence.ContainsDataItem" LineNumber="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedCodeSequence.ReadyToProduceCode" LineNumber="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedCodeSequence.CodeProduced" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedCodeSequence.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedDataItem.UserData" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedDataItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedDataItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedElementItem.UserData" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedElementItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedElementItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedItem.ItemType" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedItem.Final" LineNumber="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedItem.Root" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedItem.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedItem.Final" LineNumber="20" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedItem.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.IRecordedItem.Root" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Recording\IRecordedItem.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.Timeout" LineNumber="66" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementDocumentationMustBeSpelledCorrectly" RuleId="SA1650">The documentation text within the summary tag contains incorrectly spelled words: cmdlets, abrupts, Illiseconds</Violation>
  <Violation Section="Root.PSTestLib.ISettings.Timeout" LineNumber="66" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnSuccessDelay" LineNumber="139" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnSuccessAction" LineNumber="144" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnErrorDelay" LineNumber="150" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnErrorAction" LineNumber="155" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.Log" LineNumber="180" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets a value indicating whether</Violation>
  <Violation Section="Root.PSTestLib.ISettings.LogPath" LineNumber="184" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.MaximumErrorCount" LineNumber="192" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation Section="Root.PSTestLib.ISettings.MaximumEventCount" LineNumber="200" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.EveryCmdletAsTestResult" LineNumber="214" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.FailTestResultIfFailInTestSequence" LineNumber="215" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnSuccessAction" LineNumber="144" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnErrorDelay" LineNumber="150" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnErrorAction" LineNumber="155" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.LogPath" LineNumber="184" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.FailTestResultIfFailInTestSequence" LineNumber="215" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="19" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="21" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="67" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="89" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="90" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="94" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnSuccessAction" LineNumber="140" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnErrorDelay" LineNumber="145" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.OnErrorAction" LineNumber="151" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.LogPath" LineNumber="181" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="186" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings.MaximumErrorCount" LineNumber="188" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementDocumentationHeaderMustBePrecededByBlankLine" RuleId="SA1514">A documentation header must be preceded by a blank line or must be the first item in its scope.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="193" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="198" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="201" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentMustBePrecededByBlankLine" RuleId="SA1515">A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="212" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="217" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="218" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="23" StartLine="23" StartColumn="1" EndLine="23" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="67" StartLine="67" StartColumn="1" EndLine="67" EndColumn="12" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="79" StartLine="79" StartColumn="1" EndLine="79" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="91" StartLine="91" StartColumn="1" EndLine="91" EndColumn="64" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="95" StartLine="95" StartColumn="1" EndLine="95" EndColumn="65" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="97" StartLine="97" StartColumn="1" EndLine="97" EndColumn="61" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="101" StartLine="101" StartColumn="1" EndLine="101" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="124" StartLine="124" StartColumn="1" EndLine="124" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="157" StartLine="157" StartColumn="1" EndLine="157" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="170" StartLine="170" StartColumn="1" EndLine="170" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="187" StartLine="187" StartColumn="1" EndLine="187" EndColumn="47" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="193" StartLine="193" StartColumn="1" EndLine="193" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="198" StartLine="198" StartColumn="1" EndLine="198" EndColumn="47" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="201" StartLine="201" StartColumn="1" EndLine="201" EndColumn="11" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.ISettings" LineNumber="206" StartLine="206" StartColumn="1" EndLine="206" EndColumn="23" Source="C:\Projects\PS\STUPS\PSTestLibrary\Interfaces\Settings\ISettings.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation Section="Root.PSTestLib.PSTestHelper.PSTestHelper" LineNumber="18" Source="C:\Projects\PS\STUPS\PSTestLibrary\PSTestHelper.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation Section="Root.PSTestLib.PSTestHelper.GetTimedFileName" LineNumber="22" Source="C:\Projects\PS\STUPS\PSTestLibrary\PSTestHelper.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Projects\PS\STUPS\PSTestLibrary\PSTestHelper.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.PSTestLib.PSTestHelper.PSTestHelper" LineNumber="18" Source="C:\Projects\PS\STUPS\PSTestLibrary\PSTestHelper.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="RemoveUnnecessaryCode" RuleId="SA1409">The constructor should be removed as it is empty.</Violation>
  <Violation Section="Root.System" LineNumber="9" Source="C:\Projects\PS\STUPS\PSTestLibrary\PSTestHelper.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
</StyleCopViolations>